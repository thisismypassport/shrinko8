function n(n,e)return type(n)==type(e)and math.type(n)==math.type(e)and n==e end d=1 assert(true,1)assert(d==1,2)assert(true,2.5)assert(true,3)assert(true,3.5)assert(true,4)assert(not n(1234567890,1234567890.),5)assert(n(1e3,1e3)and n(0xab54a98ceb1f0800.,0xab54a98ceb1f0800.),5.1)assert(n(0x.12345,0x.12345),5.2)assert(true,6)assert(true,6.1)assert(-1e333==-math.huge,6.2)l,f,e=1,{},3 l,f.n,f[1],e=e,2,4,l assert(l==3 and e==1 and f["n"]==2 and f[1]==4,8)do local n=l+1 assert(n==4,9)local n=n*2 assert(n==8,9.1)end assert(l==3,9.2)local n=_ENV assert(n==_ENV,10)assert(true,11)function u()return 1,2,3 end local n,d,o,e,t,a=0,u()assert(n==0 and d==1 and o==2 and e==3 and t==nil and a==nil,12)w=0 do j=setmetatable({},{__close=function()w=33 end})local n<close> =j assert(true,12.5)end assert(w==33,12.6)function u(...)return...end assert(u(1,2,3)==1,13)l,f=(u(1,2))assert(l==1 and f==nil,14)l,f=u(1,2),3 assert(l==1 and f==3,15)assert(pack(u(1,2,nil,3,nil,nil)).n==6,16)function u(...)return...,...,...end assert(pack(u(1,2,3)).n==5,17)for n=1,3 do assert(select(n,u(1,2,3))==1,18)end assert(select(4,u(1,2,3))==2,19)r=0 for n=5,1,-2 do r=1 assert(n==5 or n==3 or n==1,20)end assert(r==1,20.5)for n=5,1 do assert(false,21)end r=0 for n,e in ipairs{4,5}do assert(n==1 and e==4 or n==2 and e==5,22)r+=1 end assert(r==2,22.5)if r==2 then r+=1 else assert(false,23)end assert(r==3,23.5)if r==2 then assert(false,24)elseif r==3 then r+=1 else assert(false,24.5)end assert(r==4,24.6)if r==2 then assert(false,25)else r+=1 end assert(r==5,25.5)if r==2 then assert(false,25.8)else r+=1 end assert(r==6,25.9)if r==6 then r=0 r=1 else assert(false,26)end assert(r==1,27)if r==5 then assert(false,28)else r=2 end assert(r==2,29)i=1 while r>0 do r-=1 i*=2 end assert(i==4 and r==0,30)while i>0 do i-=1 r+=1 end assert(r==4 and i==0,31)while r>0 do r-=1 i+=1 if i==3 then break end end assert(r==1 and i==3,32)repeat r+=1 i-=1 until r==1 or r==3 assert(r==3 and i==1,33)function u()return end function p()end assert(u()==nil and pack(u()).n==0,34)assert(p()==nil and pack(p()).n==0,35)function h(...)return...end l={1,2,d=1,r=2,3,4,[12]=4,h(5,6,nil,8)}assert(l[1]==1 and l[2]==2 and l[3]==3 and l[4]==4 and l[5]==5 and l[6]==6,36)assert(l[7]==nil and l[8]==8 and l["d"]==1 and l.r==2 and l[12]==4,37)function h(...)return{...}end do local function n(...)return{...,d=3}end assert(#n(1,2)==1 and n(1,2).d==3,38)end assert(#h(1,2)==2,39)assert(true,40)assert(true,41)assert(-2^4==-16 and(-2)^4==16,42)assert(true,43.1)e={o=function(n)return n.z end,z=3}assert(e:o()==3 and e.o{z=4}==4,44)setmetatable(e,{__index=function(e,n)return n end})assert(e.l=="l",45)e.e=e function e.e.e.z(n)return n end assert(e.z(false)==false,46)function e.e.e:t(n)return self,n end assert(e:t(true)==e and select(2,e:t(true))==true,47)do n=1 do::n::n+=1 if n==4 then goto e end goto n end::e::assert(n==4,48)end do::e::do goto n assert(false,49)::n::end end n=0 for e,d in next,{5}do assert(e==1 and d==5,50)n+=1 end assert(n==1,50.5)do local n,_ENV=add,{assert=assert}n(_ENV,3)assert(_ENV[1]==3,51)end local function e(n)_ENV=n end local d=_ENV e{assert=assert,q=123}assert(q==123,52)e(d)function u()return 9,0,1 end function v(n)return n()end function y(n)return(n())end assert(pack(v(u)).n==3 and pack(y(u)).n==1,53)n=0x.004 if n<1 then if n==0 then n=123 end else n=321 end assert(n==0x.004,55)g=23\4 assert(g==5,55.1)g\=3 assert(g==1,55.2)do local n=1 function n()end end assert(nn==nil,56)n=1 repeat until assert(true,57)do repeat until assert(true,57.5)end local function n()return 3 end assert(-n()+n()==0,58)local function d()return n end assert(d()()==3,59)local function e(n,d)local o=function()n+=1 return n end if d and d>0 then return o,e(n*2,d-1)else return o end end local o,t,a,r=e(10),e(20),e(30,1)assert(o()==11 and t()==21 and e(0)()==1 and a()==31 and r()==61 and o()==12 and t()==22 and e(0)()==1 and a()==32 and r()==62,60)function x(n)return n end assert(x"me"=="me"and x[[me]]=="me",61)b={a=function(e,n)return n end}assert(b:a"me"=="me"and#b:a{}==0,62)do while true do do::e::end goto n end::n::end function z()return 1 end assert(z()==1,63)do function _()return 1 end assert(_()==1,64)end do local n=1::n::assert(true,65)if n>1 then assert(c()==4 and true,66)goto d end local e=3 c=function()e+=1 return e end n+=1 goto n end::d::do local n=1::n::local e=n d=c c=function()e+=1 return e end n+=1 if n==3 then goto o else goto n end end::o::assert(c()==3 and c()==4 and d()==2 and c()==5 and d()==3,67)do goto n::n::end local e=0 function ord(n,d)assert(e==n,68)e+=1 return d end local e={}ord(0,e).x,ord(1,e).x=ord(2,2),ord(3,function()return 3 end)(ord(4,1),ord(5,1))assert(e.x==2,69)local e=2 assert(e==2,70)function n(e,n)assert(n==2,71)end n(1,2)k=0 m={10,20}function d()k+=1 return k end m[d()]+=1 assert(m[1]==11 and m[2]==20,72)e=0 e+=16 assert(e==16,73)assert(true,73.5)e=2 assert(e==2,74)e=3 assert(e==3,74.1)s=1 while s<10 do s+=1 if s==5 then break end end assert(s==5,75)s=3 assert(s==3,76)e=4 assert(e==4,77)do e=0 end e=123 assert(e==123,78)do local e,n=print print=function(e)n=e end?1
assert(n==1,79)print=e end do local n local print=function(e)n=e end?2
assert(n==2,80)end n=1({x=1}).x=2 assert(n==1,81)n={1}({x=1}).x=2 assert(n[1]==1,81.1)n="1"({x=1}).x=2 assert(n=="1",81.2)n=function()end({x=1}).x=2 assert(n()==nil,81.3)printh"DONE"